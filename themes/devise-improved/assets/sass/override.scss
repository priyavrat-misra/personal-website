// === Import Bootstrap and set variable overrides ===
$color-fg-default: #1f2328;
$color-fg-muted: #656d76;
$color-accent-fg: #0969da;
$color-bg-primary: #fff;
$color-border-default: #d0d7de;
$color-btn-bg: #f6f8fa;

$font-family-base: -apple-system, BlinkMacSystemFont, 'avenir next', avenir, segoe ui, 'helvetica neue', 'Adwaita Sans', Cantarell, Ubuntu, roboto, noto, helvetica, arial, sans-serif;

// === Custom Styles ===
#content {
    max-width: 650px;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

body {
  padding-left: calc(100vw - 100%);
}

main {
    flex: 1;
}

#avatar {
    border-radius: 50%;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

html {
    scroll-behavior: smooth !important;
}

a {
    color: $color-accent-fg;
    text-decoration: underline;
}

a:hover {
    color: $color-accent-fg;
    text-decoration: none;
}

a svg {
    color: $color-fg-muted;
}

a svg:hover {
    color: $color-accent-fg !important;
}

h1 { font-size: 2rem; }
h2 { font-size: 1.83rem; }
h3 { font-size: 1.67rem; }
h4 { font-size: 1.5rem; }
h5 { font-size: 1.33rem; }
h6 { font-size: 1.17rem; }

p { margin-bottom: 0.7rem; }

header {
    h1 {
        a, a:hover { color: $color-fg-default; }
    }
}

footer {
    p {
        text-align: center;
        padding: 1rem 0;
    }
}

nav ul li {
    margin-right: 1rem !important;
}

nav ul li:last-child {
    margin-right: 0 !important;
}

img {
    max-width: 100%;
}

blockquote {
    background: $color-bg-primary;
    color: $color-fg-muted;
    border-left: 6px solid $color-border-default;
    margin: 1.5em 10px;
    padding: 0.5em 10px;
    quotes: "\201C""\201D""\2018""\2019";
}

blockquote:before {
    color: $color-border-default;
    content: open-quote;
    font-size: 4em;
    line-height: 0.1em;
    margin-right: 0.25em;
    vertical-align: -0.4em;
}

blockquote p { display: inline; }

.back-to-top {
    position: fixed;
    right: 2rem;
    bottom: 2rem;
}

// === Media breakpoints ===
@media (min-width: 576px) {}
@media (min-width: 768px) {}
@media (min-width: 992px) {}
@media (min-width: 1200px) {}

@view-transition {
    navigation: auto;
}

// copypasta from https://codepen.io/brandonmcconnell/pen/bZqGdw
// now for some timing (in seconds)
$durCharFwd: 0.10; // character typed
$durFullGap: 2.00; // time between typed/delete
$durCharBwd: 0.08; // character deleted
$durDoneGap: 1.00; // time between strings

// initializing some variables and functions
$charCount: 0; $durTotal: 0;
$strings: {{ .Site.Params.header_subtitle }};
@each $string in $strings {
    $charCount: $charCount + str-length($string);
    $durTotal: $durTotal
    + (str-length($string) * ($durCharFwd + $durCharBwd))
    + $durFullGap + $durDoneGap;
}
@function percent($string, $letter, $modifier) {
    $stringsPast: $string - 1; $time: 0;
    @while $stringsPast > 0 {
        $time: $time
        + (($durCharFwd + $durCharBwd) * (str-length(nth($strings, $stringsPast))))
        + $durFullGap + $durDoneGap;
        $stringsPast: $stringsPast - 1;
    }
    @if $letter <= str-length(nth($strings, $string)) {
        $time: $time
        + ($durCharFwd * ($letter - 1));
    } @else {
        $time: $time
        + ($durCharFwd * str-length(nth($strings, $string)))
        + $durFullGap
        + ($durCharBwd * ($letter - str-length(nth($strings, $string))));
    }
    @return ($time / $durTotal * 100 + $modifier) + "%";
}
$currentPercentage: 0;
// now THIS is where the magic happens...
@keyframes typed {
    @for $i from 1 through length($strings) {
        @for $j from 1 through (str-length(nth($strings, $i)) * 2) {
            /* string #{$i}, char #{$j} */
            @if $j < str-length(nth($strings, $i)) * 2 { // not last character deleted
                #{percent($i, $j, 0)}, #{percent($i, $j+1, -0.001)} {
                    @if $j <= str-length(nth($strings, $i)) {
                        content: quote(#{str_slice(nth($strings, $i), 1, $j)});
                    } @else {
                        content: quote(#{str_slice(nth($strings, $i), 1, str-length(nth($strings, $i)) - ($j - str-length(nth($strings, $i))))});
                    }
                }
            } @else {
                @if $i < length($strings) { // not last string
                    #{percent($i, $j, 0)}, #{percent($i+1, 1, -0.001)} {
                        content: "​"; // zero-width space to retain element height
                    }
                } @else { // last string
                    #{percent($i, $j, 0)}, 100% {
                        content: "​"; // zero-width space to retain element height
                    }
                }
            }
        }
    }
}

@keyframes cursor {
    50% {border-color: transparent}
}

.subtitle {
    &::after {
        content: "​"; // zero-width space to retain element height
        border-right: 1px solid;
        animation: typed #{$durTotal + "s"} linear 1s infinite, cursor 1s infinite;
    }
}
